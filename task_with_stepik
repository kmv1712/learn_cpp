#include <iostream>

using namespace std;

int main() {
    int a, s, d, e;
    cin >> a;
    s = a % 10; // Сотые 
    d = (a % 100) / 10; // Десятичные
    e = a / 100; // Единицы 
    cout <<  s + d + e;
    return 0;
}

#include <iostream>

using namespace std;

int main() {
    int a, s, d, e;
    cin >> a; 
    cout << (a / 2 * 2 ) + 2;
    return 0;
}


#include <iostream>

using namespace std;
// циферблат
int main() {
    int t;
    cin >> t; 
    cout << t / 3600 % 24
        << ":"
        << t / 60 % 60 / 10
        << t / 60 % 60 % 10
        << ":"
        << t % 60 / 10
        << t % 60 % 10;
    return 0;
}

#include <iostream>
#include <iomanip>
#include <cmath>

using namespace std;

int main() {
  int x, y;
  double d, p, k, a;
  cin >> p >> x >> y;
  k = (x * 100 + y);
  d = k * (p / 100);
  
  cout << (int) ((k + d) / 100)
  << " "
  <<(k + d) -
   ((int) (k + d));
// потеря точности подумать
  return 0;
}

#include <iostream>

using namespace std;

int main() {
  int n, m, temp = 0, temp_i, temp_j;
  cin >> n >> m;
  int arr[n][m];
  for (int i = 0; i < n; i++){
    for (int j = 0; j < m; j++){
      cin >> arr[i][j];
    }
  }
  temp = arr[0][0];
  temp_i = 0;
  temp_j = 0;
  
  for (int i = 0; i < n; i++){
    for (int j = 0; j < m; j++){
      if (arr[i][j] > temp){
          temp = arr[i][j];
          temp_i = i;
          temp_j = j;
      }
    }
  }
  cout << temp_i << " " << temp_j;
  return 0;
}



#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int main() {
    int size, n, x, count_need_size = 0;
    cin >> size;
    cin >> n;
    vector <int> a(n);
    
    for (int i = 0; i < n; i++){
        cin >> x;
        a[i] = x;
    }
    
    sort(a.begin(), a.end());
    
    for (auto now : a){
        if (a[0] == now && a[0] <= now) {
            size = now;
            count_need_size += 1;
        }
        if (size <= (now - 3)){
            size = now;
            count_need_size += 1;
        }
    }
    
    cout << count_need_size;
    
  
    
  return 0;
}
